/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurant;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Jononi Computer
 */
public class table extends javax.swing.JFrame {

    /**
     * Creates new form table
     */
      JFrame f;
     ResultSet rs;
     String url="jdbc:sqlserver://localhost:1433;databaseName=restaurantmManagement";
              String user = "sa";
             String password = "123";
    public table() {
        initComponents();
show_user();
    }
public ArrayList<User> userList(){
        ArrayList<User> usersList = new ArrayList<>();
         try{
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             //String url="jdbc:sqlserver://localhost:1433;databaseName=restaurent;user=sa;password=123";
            Connection con = DriverManager.getConnection(url,user,password);
            String query1="SELECT * FROM booked";
            Statement st= con.createStatement();
            ResultSet rs= st.executeQuery(query1);
            User user;
            while(rs.next()){
                user=new User(rs.getInt("tableid"), rs.getInt("tableno"), rs.getInt("chair"), rs.getString("floor"), rs.getString("status"));
                usersList.add(user);
            }
         }
         catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
         return usersList;
    }
//For showing in the columns of jtable

    public void show_user(){
        ArrayList<User> list = userList();
        DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
        Object[] row = new Object[5];
        for(int i=0;i<list.size();i++){
            row[0]=list.get(i).gettableid();
            row[1]=list.get(i).gettableno();
            row[2]=list.get(i).getchair();
            row[3]=list.get(i).getfloor();
            row[4]=list.get(i).getstatus();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        table = new javax.swing.JComboBox<>();
        chairs = new javax.swing.JComboBox<>();
        floor = new javax.swing.JComboBox<>();
        family = new javax.swing.JComboBox<>();
        confirm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_User = new javax.swing.JTable();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        idT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 0));
        setForeground(new java.awt.Color(255, 0, 0));

        jLabel1.setText("Table no:");

        jLabel2.setText("No of chairs:");

        jLabel3.setText("Floorno:");

        jLabel4.setText("Status");

        table.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14" }));

        chairs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));

        floor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "#FLOOR1", "#FLOOR2" }));

        family.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Unavailable" }));

        confirm.setBackground(new java.awt.Color(51, 0, 51));
        confirm.setForeground(new java.awt.Color(255, 255, 255));
        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        jTable_Display_User.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TableId", "TableNo", "No of  chairs", "Floor", "Status"
            }
        ));
        jTable_Display_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_UserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_User);

        update.setBackground(new java.awt.Color(51, 0, 0));
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(51, 0, 51));
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel7.setText("TABLE");

        jButton1.setText("Back");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel5.setText("tableId");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addComponent(confirm)
                .addGap(121, 121, 121)
                .addComponent(update)
                .addGap(113, 113, 113)
                .addComponent(delete))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chairs, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(family, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(idT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm)
                    .addComponent(update)
                    .addComponent(delete))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)
                        .addComponent(chairs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4)
                        .addGap(19, 19, 19)
                        .addComponent(family, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(idT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
       try{
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //String url="jdbc:sqlserver://localhost:1433;databaseName=restaurent;user=sa;password=123";
            Connection con = DriverManager.getConnection(url,user,password);
            String query = "insert into booked(tableno, chair, floor, status)values(?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);
          
            String tableno,chair,floors,status;
            tableno=table.getSelectedItem().toString();
            pst.setString(1, tableno);
            chair=chairs.getSelectedItem().toString();
            pst.setString(2, chair);
            floors=floor.getSelectedItem().toString();
            pst.setString(3, floors);
            status=family.getSelectedItem().toString();
            pst.setString(4, status);
            pst.executeUpdate();
     DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
     model.setRowCount(0);
     show_user();
         
            JOptionPane.showMessageDialog(null, "Inserted Sucessfully!");
        }
         catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void jTable_Display_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_UserMouseClicked
       
         int i = jTable_Display_User.getSelectedRow();
        TableModel model =jTable_Display_User.getModel(); 
String status = model.getValueAt(i,4).toString();
            switch(status){
                case "Family":
                    family.setSelectedIndex(0);
                    break;
                case "Friends":
                    family.setSelectedIndex(1);
                    break;
                case "Relatives":
                    family.setSelectedIndex(2);
                    break;
                         case "Others":
                    family.setSelectedIndex(3);
                    break;


}
String floors = model.getValueAt(i,3).toString();
            switch(floors){
                case "#FLOOR1":
                    floor.setSelectedIndex(0);
                    break;
                case "#FLOOR2":
                    floor.setSelectedIndex(1);
                    break;
}
String chair = model.getValueAt(i,2).toString();
            switch(chair){
                case "1":
                    chairs.setSelectedIndex(0);
                    break;
                case "2":
                    chairs.setSelectedIndex(1);
                    break;
                case "3":
                    chairs.setSelectedIndex(2);
                    break;
                case "4":
                    chairs.setSelectedIndex(3);
                    break;
                case "5":
                    chairs.setSelectedIndex(4);
                    break;
                 case "6":
                    chairs.setSelectedIndex(5);
                    break;
                case "7":
                    chairs.setSelectedIndex(6);
                    break;
                case "8":
                    chairs.setSelectedIndex(7);
                    break;
                
               
                   
            }

String tables = model.getValueAt(i,1).toString();
            switch(tables){
                case "1":
                    table.setSelectedIndex(0);
                    break;
                case "2":
                    table.setSelectedIndex(1);
                    break;
                case "3":
                    table.setSelectedIndex(2);
                    break;
                case "4":
                    table.setSelectedIndex(3);
                    break;
                case "5":
                    table.setSelectedIndex(4);
                    break;
                 case "6":
                    table.setSelectedIndex(5);
                    break;
                case "7":
                    table.setSelectedIndex(6);
                    break;
                case "8":
                    table.setSelectedIndex(7);
                    break;
                case "9":
                    table.setSelectedIndex(8);
                    break;
                case "10":
                    table.setSelectedIndex(9);
                    break;
                  case "11":
                    table.setSelectedIndex(10);
                    break;
                case "12":
                    table.setSelectedIndex(11);
                    break;
                case "13":
                    table.setSelectedIndex(12);
                    break;
                case "14":
                    table.setSelectedIndex(13);
                    break;
               
                   
            }
            

       
    }//GEN-LAST:event_jTable_Display_UserMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try{
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //String url="jdbc:sqlserver://localhost:1433;databaseName=restaurent;user=sa;password=123456789";
            Connection con = DriverManager.getConnection(url,user,password);
            int row=jTable_Display_User.getSelectedRow();
            String value=idT.getText();
            String query = "UPDATE booked SET tableno=?,chair=?,floor=?,status=? where tableid="+value+" ";
            PreparedStatement pst = con.prepareStatement(query);
          
            String tableno,chair,floors,status;
            tableno=table.getSelectedItem().toString();
            pst.setString(1, tableno);
            chair=chairs.getSelectedItem().toString();
            pst.setString(2, chair);
            floors=floor.getSelectedItem().toString();
            pst.setString(3, floors);
            status=family.getSelectedItem().toString();
            pst.setString(4, status);
            pst.executeUpdate();
     DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
     model.setRowCount(0);
     show_user();
         
            JOptionPane.showMessageDialog(null, "updated Sucessfully!");
            
        }
         catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       try{
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //String url="jdbc:sqlserver://localhost:1433;databaseName=restaurent;user=sa;password=123456789";
            Connection con = DriverManager.getConnection(url,user,password);
            int row=jTable_Display_User.getSelectedRow();
            String value=(jTable_Display_User.getModel().getValueAt(row,0).toString());
            String query = "DELETE FROM booked  where tableid='"+value+"' ";
            PreparedStatement pst = con.prepareStatement(query);
          
        
            pst.executeUpdate();
     DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
     model.setRowCount(0);
     show_user();
         
            JOptionPane.showMessageDialog(null, "deleted Sucessfully!");
        }
         catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
        Dashboard D=new Dashboard();
        D.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> chairs;
    private javax.swing.JButton confirm;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> family;
    private javax.swing.JComboBox<String> floor;
    private javax.swing.JTextField idT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_User;
    private javax.swing.JComboBox<String> table;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
